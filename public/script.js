// Fonction pour lancer la v√©rification avec la touche Entr√©e
document.getElementById('emailInput').addEventListener('keypress', function (e) {
    if (e.key === 'Enter') {
        checkEmail();
    }
});


async function checkEmail() {
    const email = document.getElementById('emailInput').value;
    const resultDiv = document.getElementById('result');
    
    if (!email) {
        resultDiv.innerHTML = "<p>Oups ! Il semble que l'adresse e-mail entr√©e ne soit pas valide. Pourriez-vous v√©rifier ?</p>";
        return;
    }

    resultDiv.innerHTML = "<p>Nous v√©rifions discr√®tement en coulisses...</p>";

    // V√©rification sp√©cifique pour Guy Liguili
    if (email.toLowerCase() === 'guy.liguili@goodenough.fr') {
        // Afficher le r√©sultat sp√©cifique sans appel √† l'API
        displayGuyLiguiliResult();
        updateStats(email, 5); // Supposons 5 fuites pour l'exemple
        return;
    }
    // V√©rification sp√©cifique pour les nouvelles entr√©es
    if (email.toLowerCase() === 'eleonore.ileosud@goodenough.fr') {
        displayEleonoreResult();
        updateStats(email, 1); // Simuler une fuite
        return;
    }

    if (email.toLowerCase() === 'jean-paul.ochon@goodenough.fr') {
        displayJeanPaulResult();
        updateStats(email, 1); // Simuler une fuite
        return;
    }

    if (email.toLowerCase() === 'sacha.cale@goodenough.fr') {
        displaySachaResult();
        updateStats(email, 1); // Simuler une fuite
        return;
    }

    if (email.toLowerCase() === 'aby.cyclette@goodenough.fr') {
        displayAbyResult();
        updateStats(email, 1); // Simuler une fuite
        return;
    }

    try {
        const response = await fetch('/check-email', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
        });

        if (response.ok) {
            const data = await response.json();
            const breaches = data.breaches;

            if (breaches.length > 0) {
                displayResult(breaches);
                updateStats(email, breaches.length);
            } else {
                resultDiv.innerHTML = "<p>ü¶â Chouette ! Votre adresse e-mail n'appara√Æt dans aucune fuite de donn√©es connue. Continuez √† naviguer en toute s√©r√©nit√© (mais faites quand m√™me attention √† comment vous g√©rez vos mots de passe) !</p>";
                updateStats(email, 0);
            }
        } else if (response.status === 429) {
            resultDiv.innerHTML = "<p>Vous √™tes trop rapide pour nous ! Veuillez patienter quelques instants avant de r√©essayer.</p>";
        } else if (response.status === 400) {
            resultDiv.innerHTML = "<p>Oups ! Une erreur s'est produite. Veuillez v√©rifier l'adresse e-mail fournie.</p>";
        } else if (response.status === 401) {
            resultDiv.innerHTML = "<p>Il semble que nous ayons des difficult√©s techniques. Merci de r√©essayer plus tard.</p>";
        } else if (response.status === 503) {
            resultDiv.innerHTML = "<p>Service indisponible. Veuillez r√©essayer plus tard.</p>";
        } else {
            resultDiv.innerHTML = "<p>Oups ! Une erreur s'est produite. Veuillez r√©essayer dans quelques instants.</p>";
        }
    } catch (error) {
        console.error(error);
        resultDiv.innerHTML = "<p>Oups ! Une erreur s'est produite. Veuillez r√©essayer dans quelques instants.</p>";
    }
}

function displayResult(breaches) {
    const resultDiv = document.getElementById('result');
    let html = `<h2>ü™à Fl√ªte ! Votre adresse e-mail est apparue dans <strong>${breaches.length}</strong> fuite(s) de donn√©es.</h2>`;
    html += "<p>Voici les d√©tails :</p>";
    html += "<ul>";
    breaches.forEach(breach => {
        html += `<li><strong>${breach.Title}</strong> (Date de la fuite : ${breach.BreachDate})</li>`;
    });
    html += "</ul>";
    html += "<h3>Que se passe-t-il ?</h3>";
    html += "<p>Certaines de vos donn√©es personnelles (email, mot de passe, coordonn√©es) ont √©t√© compromises lors d'une cyberattaque sur un site o√π vous √™tes inscrit(e). Ces informations circulent probablement sur le dark web √† pr√©sent. C'est une situation s√©rieuse, mais pas de panique : nous sommes l√† pour vous accompagner !</p>";
    html += "<h3>Voici quelques √©tapes simples pour renforcer votre s√©curit√© :</h3>";
    html += "<ol>";
    html += "<li><strong>Changez vos mots de passe</strong> sur les sites concern√©s. Optez pour des combinaisons uniques et robustes.</li>";
    html += "<li><strong>√âvitez de r√©utiliser le m√™me mot de passe</strong> sur diff√©rents sites. Chaque compte m√©rite sa propre cl√© secr√®te !</li>";
    html += "<li><strong>Activez la double authentification (2FA)</strong> l√† o√π c'est possible. Une couche de s√©curit√© suppl√©mentaire ne fait jamais de mal.</li>";
    html += "<li><strong>Utilisez un gestionnaire de mots de passe</strong> (voir la suite de nos ateliers pour plus d'informations).</li>";
    html += "<li><strong>Restez vigilant</strong> face aux e-mails ou messages suspects. Si quelque chose semble trop beau pour √™tre vrai, m√©fiez-vous !</li>";
    html += "</ol>";
    resultDiv.innerHTML = html;
}

function displayGuyLiguiliResult() {
    const resultDiv = document.getElementById('result');
    let html = `<h2>üîç Rapport d'analyse pour Guy Liguili</h2>`;
    html += "<p><strong>R√©sum√© :</strong> Plusieurs de vos donn√©es personnelles ont √©t√© expos√©es lors de fuites r√©centes. Une personne mal intentionn√©e pourrait exploiter ces informations, mais fort heureusement, ce n‚Äôest pas votre cas. üòâ</p>";
    html += "<div style='background-color: #ffe6e6; padding: 1rem; border-radius: 5px;'>";
    html += "<h3>Donn√©es identifi√©es :</h3>";
    html += "<ul>";
    html += "<li><strong>Adresse e-mail :</strong> guy.liguili@goodenough.fr</li>";
    html += "<li><strong>Adresse postale :</strong> 123 Rue Imaginaire, 75000 Paris</li>";
    html += "<li><strong>Num√©ro de carte de cr√©dit :</strong> 5123 4589 0973 7643</li>";
    html += "<li style='color: red;'><strong>Mot de passe (LinkedIn):</strong> Mozart</li>";
    html += "</ul>";
    html += "</div>";
    html += "<h3>Recommandations :</h3>";
    html += "<ol>";
    html += "<li><strong>Changez imm√©diatement ce mot de passe</strong>, surtout si vous l‚Äôutilisez ailleurs.</li>";
    html += "<li>√âvitez de stocker des informations sensibles comme vos num√©ros de carte dans des comptes en ligne sans protection accrue.</li>";
    html += "<li>Envisagez une surveillance de vos transactions bancaires pour d√©tecter d'√©ventuelles activit√©s frauduleuses.</li>";
    html += "</ol>";
    resultDiv.innerHTML = html;
}

function displayEleonoreResult() {
    const resultDiv = document.getElementById('result');
    let html = `<h2>üîç Rapport d'analyse pour √âl√©onore Il√©osud</h2>`;
    html += "<ul>";
    html += "<li><strong>Adresse e-mail professionnelle :</strong> eleonore.ileosud@goodenough.fr</li>";
    html += "<li><strong>Activit√© professionnelle :</strong> Commerciale chez GoodEnough depuis 4 ans</li>";
    html += "<li><strong>Centres d'int√©r√™t :</strong> Fan de Kpop (groupe pr√©f√©r√© : IVE) et passionn√©e de bagels</li>";
    html += "<li><strong>Animaux de compagnie :</strong> poss√®de un chat : Dadou</li>";
    html += "<li><strong>Activit√© sur les r√©seaux :</strong> Interagit fr√©quemment avec des coll√®gues sur Instagram</li>";
    html += "<li style='color: red;'><strong>Mot de passe :</strong> Le mot de passe d'Eleonore √©tait dans la fuite de donn√©es de Linkedin en 2016. Son mot de passe (chiffr√©) √©tait :</li>";
    html += "</ul>";

    // Ajout de l'image
    html += `
        <div class="image-container">
            <img src="/src/CapchaEleonore.png" alt="Illustration du profil d'√âl√©onore">
        </div>
    `;

    resultDiv.innerHTML = html;
}

function displayAbyResult() {
    const resultDiv = document.getElementById('result');
    let html = `<h2>üîç Rapport d'analyse pour Aby Cyclette</h2>`;
    html += "<ul>";
    html += "<li><strong>Adresse e-mail professionnelle :</strong> aby.cyclette@goodenough.fr</li>";
    html += "<li><strong>Activit√© professionnelle :</strong> Charg√©e de logistique chez GoodEnough depuis 5 ans</li>";
    html += "<li><strong>Centres d'int√©r√™t :</strong> Fan de v√©lo (fait du cyclisme amateur) et collectionneuse de timbres vintage</li>";
    html += "<li><strong>Animaux de compagnie :</strong> poss√®de un chien : Rocky</li>";
    html += "<li><strong>Activit√© sur les r√©seaux :</strong> Partage des photos de ses randonn√©es sur Twitter et Instagram</li>";
    html += "<li style='color: red;'><strong>Mot de passe :</strong> Le mot de passe d'Aby √©tait dans la fuite de donn√©es de Strava en 2019. Son mot de passe (chiffr√©) √©tait :</li>";
    html += "</ul>";
    

    // Ajout de l'image
    html += `
        <div class="image-container">
            <img src="/src/CaptchaAby.png" alt="Illustration du profil d'Aby">
        </div>
    `;

    resultDiv.innerHTML = html;
}

function displayJeanPaulResult() {
    const resultDiv = document.getElementById('result');
    let html = `<h2>üîç Rapport d'analyse pour Jean-Paul Ochon</h2>`;
    html += "<ul>";
    html += "<li><strong>Adresse e-mail :</strong> jean-paul.ochon@goodenough.fr</li>";
    html += "<li><strong>Activit√© professionnelle :</strong> D√©veloppeur logiciel chez GoodEnough depuis 3 mois</li>";
    html += "<li><strong>Centres d'int√©r√™t :</strong> Participe √† des forums de programmation et partage ses voyages sur YouTube</li>";
    html += "<li><strong>Vie priv√©e :</strong> P√®re d‚Äôun fils nomm√© Paul, n√© le 21/02/2023</li>";
    html += "<li style='color: red;'><strong>Mot de passe :</strong> Le mot de passe de Jean-Paul √©tait dans la fuite de donn√©es de Dropbox en 2012, son mot de passe (chiffr√©) √©tait :</li>";
    html += "</ul>";
        // Ajout de l'image
        html += `
        <div class="image-container">
            <img src="/src/CapchaJeanPaul.png" alt="Illustration du profil de Jean-Paul">
        </div>
    `;

    resultDiv.innerHTML = html;
}

function displaySachaResult() {
    const resultDiv = document.getElementById('result');
    let html = `<h2>üîç Rapport d'analyse pour Sacha Cale</h2>`;
    html += "<ul>";
    html += "<li><strong>Adresse e-mail :</strong> sacha.cale@goodenough.fr</li>";
    html += "<li><strong>Activit√© professionnelle :</strong> Producteur de valeurs chez GoodEnough depuis 2 ans</li>";
    html += "<li><strong>Centres d'int√©r√™t :</strong> Tr√®s actif sur Strava</li>";
    html += "<li><strong>Famille :</strong> Trois enfants : Anna, Lise et Mehdi</li>";
    html += "<li style='color: red;'><strong>Mot de passe :</strong> Le mot de passe de Sacha √©tait dans la fuite de donn√©es de Shein en 2018, son mot de passe (chiffr√©) √©tait le suivant. Il semble que Sacha utilise un gestionnaire de mots de passe, ce mot de passe sera tr√®s difficile √† d√©chiffrer et il est peu probable que Sacha r√©utilise ce mot de passe ailleurs :</li>";
    html += "</ul>";
        // Ajout de l'image
        html += `
        <div class="image-container">
            <img src="/src/CapchaSacha.png" alt="Illustration du profil de Sacha">
        </div>
    `;
    resultDiv.innerHTML = html;
}



function updateStats(email, leakCount) {
    let uniqueEmails = JSON.parse(localStorage.getItem('uniqueEmails')) || [];
    let leakRecord = parseInt(localStorage.getItem('leakRecord')) || 0;

    if (!uniqueEmails.includes(email)) {
        uniqueEmails.push(email);
        localStorage.setItem('uniqueEmails', JSON.stringify(uniqueEmails));
    }

    document.getElementById('uniqueCount').textContent = uniqueEmails.length;

    if (leakCount > leakRecord) {
        leakRecord = leakCount;
        localStorage.setItem('leakRecord', leakRecord);
    }

    document.getElementById('leakRecord').textContent = leakRecord;
}

window.onload = function() {
    let uniqueEmails = JSON.parse(localStorage.getItem('uniqueEmails')) || [];
    let leakRecord = parseInt(localStorage.getItem('leakRecord')) || 0;
    document.getElementById('uniqueCount').textContent = uniqueEmails.length;
    document.getElementById('leakRecord').textContent = leakRecord;
}